<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction to programming for geoscientists</title>
    <description>
This lecture course has two objectives: learn the basic principles of computer programming; become proficient at Python programming as it is currently one of the most commonly used languages in computational science.
</description>
    <link>http://ggorman.github.io/</link>
    <atom:link href="http://ggorman.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 09 Oct 2014 10:01:35 +0100</pubDate>
    <lastBuildDate>Thu, 09 Oct 2014 10:01:35 +0100</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Lecture 1</title>
        <description>&lt;p&gt;The lecture is written in IPython notebook format. You can view it directly using
&lt;a href=&quot;http://nbviewer.ipython.org/url/raw.github.com/ggorman/Introduction-to-programming-for-geoscientists/master/notebook/Lecture-1-Introduction-to-programming-for-geoscientists.ipynb?raw=true&quot;&gt;nbviewer&lt;/a&gt;
or &lt;a href=&quot;http://raw.github.com/ggorman/Introduction-to-programming-for-geoscientists/master/notebook/Lecture-1-Introduction-to-programming-for-geoscientists.ipynb?raw=true&quot;&gt;download the notebook here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We recommend that you download the notebooks for the lecture and store them in the H: derive. You will quickly see that you can edit these notebooks yourself to add your own notes and do the exercises. When you download the notebook file you can open it in a number of ways in the computer lab. Both of these solutions will also work on your personal computer and you can download the packages for free.&lt;/p&gt;

&lt;h3 id=&quot;enthought-conopyhttpswwwenthoughtcomproductscanopy&quot;&gt;&lt;a href=&quot;https://www.enthought.com/products/canopy/&quot;&gt;Enthought: Conopy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Go to the Windows Start menu and start Canopy· From Canopy open the notebook that you downloaded.&lt;/p&gt;

&lt;h3 id=&quot;continuum-analytics---anacondahttpsstorecontinuumiocshopanaconda&quot;&gt;&lt;a href=&quot;https://store.continuum.io/cshop/anaconda/&quot;&gt;Continuum Analytics - Anaconda&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First, we strongly recommend setting your default browser to Google Chrome or Firefox. However, internet Explorer will not work. From the Windows Start menu start the CMD command line and type:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ipython notebook&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will start up IPython notebook in your default browser. From there you can open the IPython notebook file that you have downloaded.&lt;/p&gt;

&lt;!--
[Solutions](http://nbviewer.ipython.org/url/raw.github.com/ggorman/Introduction-to-programming-for-geoscientists/master/notebook/Lecture-1-Introduction-to-programming-for-geoscientists-Solutions.ipynb?raw=true)
--&gt;

</description>
        <pubDate>Thu, 16 Oct 2014 15:10:00 +0100</pubDate>
        <link>http://ggorman.github.io/lecture/notes/2014/10/16/Lecture1.html</link>
        <guid isPermaLink="true">http://ggorman.github.io/lecture/notes/2014/10/16/Lecture1.html</guid>
        
        
        <category>lecture</category>
        
        <category>notes</category>
        
      </item>
    
      <item>
        <title>Introduction</title>
        <description>&lt;h2 id=&quot;what-is-the-course-about&quot;&gt;What is the course about?&lt;/h2&gt;

&lt;p&gt;This lecture course is designed to be a first introduction to
computing programming. No previous knowledge of computer programming,
or indeed computing, is assumed. We will be covering core concepts in
programming which you will be able to reapply to any other programming
language that you are likely to encounter in the future.&lt;/p&gt;

&lt;h2 id=&quot;i-did-not-sign-up-for-computer-science---why-on-earth-am-i-doing-this&quot;&gt;I did not sign up for computer science - why on earth am I doing this?&lt;/h2&gt;

&lt;p&gt;You might be asking as a geoscientist why on earth are you learning to
program. You were expecting exciting field trips etc, not hours
looking at a computer screen. The fact is that at computing and at
least basic programming are crucial skills in nearly all modern
science and engineering. It has many uses in data analysis, simulation
and prediction. Irrespective of what area you pursue in geoscience,
you will need to do somewhere between a little or a lot of
programming. Another way I would sell the idea to you is ultimately,
with just the right set of basic skills, you can automate all the
boring stuff and focus on the fun stuff.&lt;/p&gt;

&lt;h2 id=&quot;hey-the-lecturer-is-not-lecturing-us&quot;&gt;Hey, the lecturer is not lecturing us!&lt;/h2&gt;

&lt;p&gt;Lets get this straight because it comes up every year - for a couple
of reasons I will not be standing in front, talking at you, for 3
hours each week. This worries some students because it does not align
with the common notion of what a lecture entails. So let me explain…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ixil.izt.uam.mx/pd/lib/exe/fetch.php/ib:modconduccion:the_change_up_in_lectures.pdf&quot;&gt;For starters, in the best of circumstances the adult student can maintain focus for 15-20&lt;/a&gt;. Then
you need refreshing or resetting. Sure you may sit passively for much
longer and think you are learning/being taught but the scientific
evidence says you are working sub-optimally and spend significant
periods zoned out. Secondly, passive learning simply does not work for
this course no more than it would work for learning to
cycle. Computing programming is a practical skill and you mostly learn
by doing it yourself. On the plus side the experience does not hurt
nearly as much as learning to cycle.&lt;/p&gt;

&lt;p&gt;For this reason we apply a form of
&lt;a href=&quot;http://en.wikipedia.org/wiki/Blended_learning&quot;&gt;blended learning&lt;/a&gt;. All
the course material is online and you are expected to have read
through the relevant material before a lecture. Lets face it - you do
not need me to read to you. The face-to-face lecture is based in the
computer lab. There we will have a series of ~10 minute lectures to
establish context/motivation, run through live examples and explore
issues raised by you the students. Most of the time you will be
working through the exercises that make use of the concepts introduced
in the lecture material. This should be a highly interactive
experience with your peers (sometimes the best person to explain
something is someone who just learned it themselves as they are closer
to your perspective), teaching assistants (we have a really good
GTA/student ratio so make use of them!) and lecturer. While I have
suggested a text book which you may choose to read sections of for
greater understanding and entertainment - &lt;strong&gt;the critical aspect of the
course is to complete these exercises&lt;/strong&gt;. Just ask the students in the
years ahead of you.&lt;/p&gt;

&lt;h2 id=&quot;the-exam&quot;&gt;The exam&lt;/h2&gt;

&lt;p&gt;The exam for this course will also similarly involve a set of
programming exercises. It is done in the lab just before we break for
Christmas and is open book. If you do all the exercises then you can
expect the exam to be trivial - last year 50% got above 70%. On the
other hand if you do not to the exercises, chances are you will be
lost.&lt;/p&gt;

&lt;h2 id=&quot;why-python-why-not-insert-whatever-language-instead&quot;&gt;Why Python? Why not [insert whatever language] instead?&lt;/h2&gt;

&lt;p&gt;Python is a modern, general-purpose, object-oriented, high-level programming language. It is widely used in science and engineering and overall has a significant share of the programming market share (see &lt;a href=&quot;http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html&quot;&gt;TIOBE&lt;/a&gt;). It is also one of the &lt;a href=&quot;http://cacm.acm.org/blogs/blog-cacm/176450-python-is-now-the-most-popular-introductory-teaching-language-at-top-us-universities/fulltext&quot;&gt;most popular introductary teaching languages&lt;/a&gt; &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Simplicity: It is easy to read and easy to learn.
Expressive: Fewer lines of code, fewer bugs and easy to maintain.
Powerful: Python is not a language you grow out of. It can also be used for large projects, Big Data, High Performance Computing applications, etc.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;course-material&quot;&gt;Course material&lt;/h2&gt;

&lt;p&gt;All the course notes are online. Sample solutions to the exercises
will be made available after each lecture. If you miss a lecture (due
to ebola or similarly good reason) then make an earnest attempt at the
exercises before reading the solution or you will deprive yourself of
the learning experience.&lt;/p&gt;

&lt;h2 id=&quot;supplementary-material&quot;&gt;Supplementary material&lt;/h2&gt;

&lt;p&gt;This course loosely follows the text book
&lt;a href=&quot;http://www.amazon.co.uk/Scientific-Programming-Computational-Science-Engineering/dp/3642302920&quot;&gt;A Primer on Scientific Programming with Python, by Hans Petter Langtangen&lt;/a&gt;. There
are many copies in the library so do not feel that you have to buy
it. As explained above, you do not have to read this book to excel in
this course as the online course material is self contained. However,
it is a good resource if you want to broaden your understanding of the
subject.&lt;/p&gt;

&lt;p&gt;One size does not fit all. Therefore, I encourage you to browse a few different resources suggested by students over the years (see below) which might appeal to your learning habits. Just remember to always go back and do the exercises to ensure we are all on the same page.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.python.org&amp;gt;&quot;&gt;Python&lt;/a&gt;. The official Python web site.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://docs.python.org/2/tutorial/&quot;&gt;Python tutorials&lt;/a&gt;. The official Python tutorials.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.greenteapress.com/thinkpython/&quot;&gt;Think Python&lt;/a&gt;. A free book on Python.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.codecademy.com/tracks/python&quot;&gt;Free online Python course from the Codecademy&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://software-carpentry.org/v4/python/&quot;&gt;Software Carpentry python course&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.khanacademy.org/science/computer-science&quot;&gt;Khan Academy python course&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 16 Oct 2014 15:00:00 +0100</pubDate>
        <link>http://ggorman.github.io/lecture/notes/2014/10/16/Introduction.html</link>
        <guid isPermaLink="true">http://ggorman.github.io/lecture/notes/2014/10/16/Introduction.html</guid>
        
        
        <category>lecture</category>
        
        <category>notes</category>
        
      </item>
    
  </channel>
</rss>
